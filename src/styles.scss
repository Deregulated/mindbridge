/* Use one of the available Angular Material themes */
@import '@angular/material/prebuilt-themes/indigo-pink.css';
/* Available themes:
   - indigo-pink.css (default)
   - deeppurple-amber.css
   - pink-bluegrey.css  
   - purple-green.css
*/

/* Global Variables */
:root {
  --primary-color: #4a90e2;
  --secondary-color: #50e3c2;
  --accent-color: #9013fe;
  --warning-color: #f5a623;
  --error-color: #d0021b;
  --success-color: #7ed321;
  
  --text-primary: #333333;
  --text-secondary: #666666;
  --text-light: #999999;
  
  --background-primary: #ffffff;
  --background-secondary: #f8f9fa;
  --background-accent: #e3f2fd;
  
  --border-color: #e0e0e0;
  --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  
  --font-family: 'Inter', 'Roboto', 'Helvetica', 'Arial', sans-serif;
  --font-size-base: 1rem;
  --line-height: 1.6;
  
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
  
  --border-radius: 8px;
  --border-radius-lg: 12px;
}

/* High Contrast Theme */
.high-contrast {
  --primary-color: #000000;
  --secondary-color: #ffffff;
  --text-primary: #000000;
  --text-secondary: #333333;
  --background-primary: #ffffff;
  --background-secondary: #f0f0f0;
  --border-color: #000000;
}

/* Reduced Motion */
.reduced-motion * {
  animation-duration: 0.01ms !important;
  animation-iteration-count: 1 !important;
  transition-duration: 0.01ms !important;
}

/* Global Styles */
* {
  box-sizing: border-box;
}

html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: var(--font-family);
  font-size: var(--font-size-base);
  line-height: var(--line-height);
  color: var(--text-primary);
  background-color: var(--background-primary);
}

/* Accessibility Focus Styles */
button:focus-visible,
a:focus-visible,
input:focus-visible,
select:focus-visible,
textarea:focus-visible {
  outline: 3px solid var(--primary-color);
  outline-offset: 2px;
}

/* Utility Classes */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 var(--spacing-md);
}

.text-center { text-align: center; }
.text-left { text-align: left; }
.text-right { text-align: right; }

.mt-0 { margin-top: 0; }
.mt-1 { margin-top: var(--spacing-xs); }
.mt-2 { margin-top: var(--spacing-sm); }
.mt-3 { margin-top: var(--spacing-md); }
.mt-4 { margin-top: var(--spacing-lg); }
.mt-5 { margin-top: var(--spacing-xl); }

/* Material Overrides */
.mat-toolbar {
  background: var(--background-primary) !important;
  color: var(--text-primary) !important;
  box-shadow: var(--shadow) !important;
}

.mat-card {
  border-radius: var(--border-radius-lg) !important;
  box-shadow: var(--shadow) !important;
}

/* Responsive Design */
@media (max-width: 768px) {
  :root {
    --font-size-base: 0.9rem;
  }
  
  .container {
    padding: 0 var(--spacing-sm);
  }
}

// Transition variables
$transition-fast: 0.2s;
$transition-base: 0.3s;
$transition-slow: 0.5s;
$transition-slower: 0.8s;

// Easing functions
$ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
$ease-out: cubic-bezier(0, 0, 0.2, 1);
$ease-in: cubic-bezier(0.4, 0, 1, 1);
$ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);

// Z-index layers
$z-index-modal: 1000;
$z-index-overlay: 900;
$z-index-dropdown: 800;
$z-index-header: 700;

// Breakpoints
$breakpoints: (
  'xs': 480px,
  'sm': 768px,
  'md': 1024px,
  'lg': 1200px,
  'xl': 1440px
);

// Mixins
@mixin transition($properties: all, $duration: $transition-base, $easing: $ease-in-out) {
  @if type-of($properties) == 'list' {
    transition-property: $properties;
    transition-duration: $duration;
    transition-timing-function: $easing;
  } @else {
    transition: $properties $duration $easing;
  }
}

@mixin fade-in($duration: $transition-base) {
  opacity: 0;
  animation: fadeIn $duration $ease-in-out forwards;
}

@mixin slide-in($direction: 'up', $distance: 30px, $duration: $transition-base) {
  opacity: 0;
  transform: translateY(if($direction == 'up', $distance, -$distance));
  animation: slideIn $duration $ease-out forwards;
  
  @if $direction == 'left' {
    transform: translateX($distance);
  } @else if $direction == 'right' {
    transform: translateX(-$distance);
  }
}

@mixin scale-hover($scale: 1.05) {
  @include transition(transform);
  
  &:hover {
    transform: scale($scale);
  }
}

@mixin stagger-children($delay-increment: 0.1s, $start-delay: 0s) {
  @for $i from 1 through 10 {
    &:nth-child(#{$i}) {
      animation-delay: $start-delay + ($i - 1) * $delay-increment;
    }
  }
}

@mixin responsive($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @error "Breakpoint #{$breakpoint} not found in $breakpoints map";
  }
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
